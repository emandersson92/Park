[1mdiff --git a/Park/Park.cpp b/Park/Park.cpp[m
[1mindex 4ce23dc..8d6c2fb 100644[m
[1m--- a/Park/Park.cpp[m
[1m+++ b/Park/Park.cpp[m
[36m@@ -19,6 +19,7 @@[m
 [m
 #include "Bin_MovingObj_MyTracker.h"[m
 [m
[32m+[m[32m#include "opencv2\highgui.hpp"[m
 [m
 [m
 using namespace cv;[m
[36m@@ -96,6 +97,18 @@[m [mint main(int argc, char** argv)[m
 	waitKey();[m
 	*/[m
 [m
[32m+[m[41m	[m
[32m+[m
[32m+[m	[32m//TEMPORARILY PUT HERE[m
[32m+[m
[32m+[m	[32mnamedWindow("filtered");[m
[32m+[m	[32mnamedWindow("segmented");[m
[32m+[m
[32m+[m	[32mint widMax = 200;[m
[32m+[m	[32mint widMin = 10;[m
[32m+[m	[32mint heiMax = 200;[m
[32m+[m	[32mint heiMin = 10;[m
[32m+[m
 	// using CV_TRACKER[m
 	if (CV_TRACKER == true) {[m
 		cout << "CV_TRACKER IS DEFINED" << endl;[m
[36m@@ -138,27 +151,41 @@[m [mint main(int argc, char** argv)[m
 					detector->filter(segmented, filtered);[m
 					detector->classify(filtered, contours);[m
 [m
[32m+[m
[32m+[m					[32mcv::imshow("filtered", filtered);[m
[32m+[m					[32mcv::imshow("segmented", segmented);[m
[32m+[m
[32m+[m					[32mchar ch = waitKey(0);[m
[32m+[m[41m					[m
[32m+[m
[32m+[m
 					///if no object is found, wait for next frame[m
 					if (contours.size() > 0)[m
 					{[m
 						///get one initiating rect to define boundingBox region[m
[32m+[m
 						boundingBox = boundingRect(contours.back());[m
 [m
[31m-						if (!initialized)[m
[32m+[m						[32mif (boundingBox.width <= widMax && boundingBox.width >= widMin && boundingBox.height <= heiMax && boundingBox.height >= heiMin)[m
 						{[m
[31m-							//initializes the tracker[m
[31m-							if (!tracker->init(raw, boundingBox))[m
[32m+[m
[32m+[m							[32mif (!initialized)[m
 							{[m
[31m-								std::cout << "***Could not initialize tracker...***\n";[m
[31m-								getchar();[m
[31m-								return -1;[m
[32m+[m								[32m//initializes the tracker[m
[32m+[m								[32mif (!tracker->init(raw, boundingBox))[m
[32m+[m								[32m{[m
[32m+[m									[32m//cannot initialyze new tracker secont time. TODO[m
[32m+[m									[32mstd::cout << "***Could not initialize tracker...***\n";[m
[32m+[m									[32mgetchar();[m
[32m+[m									[32mreturn -1;[m
[32m+[m								[32m}[m
[32m+[m								[32minitialized = true;[m
[32m+[m								[32misTracking = true;[m
[32m+[m							[32m}[m
[32m+[m							[32m///tracker is initialized[m
[32m+[m							[32melse {[m
[32m+[m								[32misTracking = true;[m
 							}[m
[31m-							initialized = true;[m
[31m-							isTracking = true;[m
[31m-						}[m
[31m-						///tracker is initialized[m
[31m-						else {[m
[31m-							isTracking = true;[m
 						}[m
 					}[m
 				}[m
[36m@@ -177,7 +204,11 @@[m [mint main(int argc, char** argv)[m
 						//tracker lost?? todo check if you come here when tracker is lost[m
 						initialized = false;[m
 						isTracking = false;[m
[31m-						//tracker->clear(); nessesarry?? todo[m
[32m+[m						[32m//tracker->clear(); //nessesarry?? todo[m
[32m+[m						[32m//Todo memory leakage?[m
[32m+[m						[32mtracker = TrackerKCF::create();[m
[32m+[m[41m						[m
[32m+[m[41m						[m
 					}[m
 				}[m
 [m
